name: Build RSS

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"   # alle 30 Minuten (UTC)

permissions:
  contents: write

concurrency:
  group: build-rss
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build feed
        env:
          OUT_PATH: docs/feed.xml
          FEED_TITLE: "ÖPNV Störungen Wien & Umgebung"
          FEED_LINK: "https://github.com/Origamihase/wien-oepnv"
          FEED_DESC: "Aktive Störungen/Baustellen/Einschränkungen aus offiziellen Quellen"
          LOG_LEVEL: INFO
          DESCRIPTION_CHAR_LIMIT: 170
          FRESH_PUBDATE_WINDOW_MIN: 5
          # Für spätere Aktivierung (offizielle Zugänge hinterlegen):
          # OEBB_API_BASE_URL: ${{ secrets.OEBB_API_BASE_URL }}
          # OEBB_API_TOKEN:     ${{ secrets.OEBB_API_TOKEN }}
          # VOR_API_BASE_URL:   ${{ secrets.VOR_API_BASE_URL }}
          # VOR_API_TOKEN:      ${{ secrets.VOR_API_TOKEN }}
        run: python -u src/build_feed.py

      - name: Validate feed (XML + GUID uniqueness)
        run: |
          python - <<'PY'
          import sys, xml.etree.ElementTree as ET
          p = "docs/feed.xml"
          try:
              tree = ET.parse(p)
          except ET.ParseError as e:
              print("XML parse error:", e)
              sys.exit(2)
          root = tree.getroot()
          assert root.tag == "rss", "Root is not <rss>"
          ch = root.find("channel")
          assert ch is not None, "Missing <channel>"
          items = ch.findall("item")
          guids = [i.findtext("guid") or "" for i in items]
          if len(guids) != len(set(guids)):
              dupes = [g for g in set(guids) if guids.count(g) > 1]
              raise SystemExit(f"Duplicate GUIDs detected: {dupes}")
          print(f"Feed OK: {len(items)} items, GUIDs unique.")
          PY

      - name: Commit & push feed (only if changed)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(feed): update"
          file_pattern: docs/feed.xml
          branch: ${{ github.ref_name }}
