name: Build Feed

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/build-feed.yml'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build feed
        run: python src/build_feed.py
        env:
          VOR_API_KEY: ${{ secrets.VOR_API_KEY }}

      - name: Normalize feed metadata (SEO)
        run: |
          set -euo pipefail
          perl -0777 -i -pe '
            my $base = $ENV{"BASE"} // "https://origamihase.github.io/wien-oepnv";
            my $s = $_;

            $s =~ s{<rss\b(?![^>]*\bxmlns:atom=)}{<rss xmlns:atom="http://www.w3.org/2005/Atom" }s;
            $s =~ s{(?:\r?\n)?[ \t]*<atom:link\b[^>]*?/>}{}gs;
            $s =~ s{(<channel>.*?<description>.*?</description>)(?:\s*<language>.*?</language>)?\s*}{
              my $prefix = $1;
              "$prefix\n    <atom:link rel=\"alternate\" type=\"text/html\" href=\"$base/\"/>\n    <atom:link rel=\"self\" type=\"application/rss+xml\" href=\"$base/feed.xml\"/>\n    <language>de</language>\n"
            }es;

            $_ = $s;
          ' docs/feed.xml
        env:
          BASE: https://origamihase.github.io/wien-oepnv

      - name: Configure Git
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Commit and push changes
        if: github.ref == 'refs/heads/main'
        run: |
          # Stash any changes first
          git stash

          # Get latest changes
          git pull origin main

          # Apply stashed changes
          git stash pop

          # Stage and commit changes
          git add docs/feed.xml
          git diff --staged --quiet || git commit -m "Update feed"

          # Push if there are changes
          git push origin main
