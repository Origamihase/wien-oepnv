name: Reusable - Update VOR cache

on:
  workflow_call:

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      VOR_ACCESS_ID: ${{ secrets.VOR_ACCESS_ID }}
      VOR_BASE_URL: ${{ secrets.VOR_BASE_URL }}
      VOR_BASE: ${{ secrets.VOR_BASE }}
      VOR_VERSION: ${{ secrets.VOR_VERSION }}
      PIP_CACHE_DIR: /tmp/pip-cache

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Ensure pip cache directory exists
        run: mkdir -p "$PIP_CACHE_DIR"

      - name: Validate VOR secrets
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "${VOR_ACCESS_ID:-}" ]]; then
            echo "Secret VOR_ACCESS_ID steht im Workflow-Lauf nicht zur VerfÃ¼gung." >&2
            echo "Bei PRs aus Forks oder nicht freigegebenen Environments werden Secrets nicht injiziert." >&2
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Refresh VOR cache
        run: python scripts/update_vor_cache.py

      - name: Commit and push changes
        shell: bash
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add cache/vor/events.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          branch="${BRANCH_NAME:-${GITHUB_REF#refs/heads/}}"
          if [[ -z "$branch" || "$branch" == "$GITHUB_REF" ]]; then
            branch="$(git rev-parse --abbrev-ref HEAD)"
          fi
          git commit -m 'chore: update VOR cache'
          git pull --rebase origin "$branch"
          git push origin HEAD:"$branch"
