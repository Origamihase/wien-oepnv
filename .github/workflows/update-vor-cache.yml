name: Update VOR cache

on:
  workflow_call:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      VOR_ACCESS_ID: ${{ secrets.VOR_ACCESS_ID }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Load VOR station IDs from repository (if available)
        shell: bash
        run: |
          set -euo pipefail
          FILE="data/vor_station_ids_wien.txt"
          if [[ -f "$FILE" ]]; then
            IDS="$(tr -d '\r\n ' < "$FILE")"
            if [[ -n "$IDS" ]]; then
              echo "VOR_STATION_IDS=$IDS" >> "$GITHUB_ENV"
            fi
          fi

      - name: Refresh VOR cache
        env:
          VOR_ACCESS_ID: ${{ secrets.VOR_ACCESS_ID }}
        run: python scripts/update_vor_cache.py
        env:
          VOR_ACCESS_ID: ${{ secrets.VOR_ACCESS_ID }}

      - name: Commit and push changes
        shell: bash
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add cache/vor/events.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          branch="${BRANCH_NAME:-${GITHUB_REF#refs/heads/}}"
          if [[ -z "$branch" || "$branch" == "$GITHUB_REF" ]]; then
            branch="$(git rev-parse --abbrev-ref HEAD)"
          fi
          git commit -m 'chore: update VOR cache'
          git pull --rebase origin "$branch"
          git push origin HEAD:"$branch"
